/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

"use strict";
eval("'use strict'; \r\nvar usrContent = angular.module('usrContent', ['ui.mask', 'summernote']);\r\n\r\nusrContent.controller('ctrlEditProfile', ['$scope', '$rootScope', '$timeout', '$http', 'Usr',\r\n\tfunction($scope, $rootScope, $timeout, $http, Usr) {\r\n\r\n\tUsr.query().$promise.then(function(data) {\r\n       $rootScope.usr = data[0];\r\n   \t});\r\n\r\n\t$scope.imgForm = function(imgtarget){\r\n\t\t$timeout(function(){\r\n            $scope.imgtarget = imgtarget;\r\n        }, 10);\r\n\t}\r\n\r\n\t$scope.img_coordinates = function(coordinates){\r\n        $scope.coordinates = coordinates;\r\n    }\r\n\r\n    $scope.cancelUpload = function(){\r\n        $scope.imgtarget = '';\r\n    \tangular.element('.upload').val('');\r\n    \tangular.element('#target').data('Jcrop').destroy();\r\n    \tangular.element('#target').attr('src', '');\r\n\t}\r\n\r\n    $scope.uploadFile = function(files){\r\n        $http({\r\n            method: 'POST',\r\n            url: '/upload_dp',\r\n            headers: { 'Content-Type': undefined },\r\n            transformRequest: function (data) {\r\n                var fd = new FormData();\r\n\r\n                fd.append('coordinates', angular.toJson(data.coordinates));\r\n                angular.forEach(data.img_files, function(file){\r\n                   fd.append('file', file);\r\n                });\r\n                return fd;\r\n            },\r\n            data: {img_files: files, coordinates: $scope.coordinates}\r\n        }).then(function(result){\r\n        \tconsole.log(result.data);\r\n   \t\t\t\r\n   \t\t\tvar msg = result.data;\r\n\r\n   \t\t\tif(!msg['dp']['success']){\r\n            \t$scope.msg = '';\r\n            }else{\r\n                $scope.msg = msg;\r\n                $rootScope.usr = Usr.query();\r\n\t            $scope.cancelUpload();\r\n\t            angular.element('#cropModal').modal('hide');\r\n            }\r\n        });\r\n    }\r\n\r\n    $scope.timestamp = function(){\r\n    \treturn Date.now();\r\n    }\r\n    $scope.updateUsr = function(){\r\n    \t$rootScope.usr = Usr.query();\r\n    }\r\n\r\n    $scope.deleteRecord = function(num){\r\n    \t$http({\r\n            method: 'POST',\r\n            url: '/delete_record',\r\n            headers: { 'Content-Type': undefined },\r\n            transformRequest: function (data) {\r\n                var fd = new FormData();\r\n\r\n                fd.append('num', angular.toJson(data.num));\r\n                return fd;\r\n            },\r\n            data: {num: num}\r\n        }).then(function(result){\r\n        \tvar msg = result.data;\r\n        \tvar msg_dtl = [];\r\n        \tif(msg['dpimg']){\r\n        \t\tmsg_dtl = msg['dpimg']['dlt']['success'];\r\n        \t}\r\n        \tif(msg['rsm']){\r\n        \t\tmsg_dtl = msg['rsm']['dlt']['success'];\r\n        \t}\r\n        \tif(!msg_dtl){\r\n            \t$scope.msg = '';\r\n            }else{\r\n                $scope.msg = msg;\r\n                $rootScope.usr = Usr.query();\r\n            }\r\n        });\r\n    }\r\n\r\n    $scope.clsbbl = function(num){\r\n    \tswitch(num){\r\n    \t\tcase 0:\r\n    \t\t\t$scope.dltdp = false;\r\n    \t\t\tbreak;\r\n    \t\tcase 1:\r\n    \t\t\t$scope.dltrsm = false;\r\n    \t\t\tbreak;\r\n    \t}\r\n    }\r\n\r\n    angular.element('#edtprof_accrdn .card:nth-child(1) .collapse').collapse('show');\r\n    angular.element('#edtprof_accrdn .card .card-header').addClass('collapsed');\r\n    angular.element('#edtprof_accrdn .card:nth-child(1) .card-header').removeClass('collapsed');\r\n    angular.element('#edtprof_accrdn .card .collapse').collapse('hide');\r\n    var current_num = 1;\r\n\r\n    $scope.collapseTab = function(num){\r\n        if(!angular.element('#edtprof_accrdn .card:nth-child('+num+')').hasClass('disabled')){\r\n            angular.element('#edtprof_accrdn .card .collapse').collapse('hide');\r\n            angular.element('#edtprof_accrdn .card:nth-child('+num+') .collapse').collapse('show');\r\n            \r\n            if(current_num == num){\r\n                angular.element('#edtprof_accrdn .card:nth-child('+num+') .card-header').toggleClass('collapsed');\r\n            }else{\r\n                angular.element('#edtprof_accrdn .card .card-header').addClass('collapsed');\r\n                angular.element('#edtprof_accrdn .card:nth-child('+num+') .card-header').toggleClass('collapsed');\r\n            }\r\n            current_num = num;\r\n        }\r\n    }\r\n\r\n\r\n    $scope.summernote_options = {\r\n        toolbar: [\r\n                ['edit',['undo','redo']],\r\n                ['style', ['bold', 'italic', 'underline']],\r\n                ['alignment', ['ul', 'ol', 'paragraph', 'lineheight']]\r\n                \r\n            ]\r\n    };\r\n    $scope.makeSameAddress = function(check){\r\n        if(check == true){\r\n            $scope.usr.prmnnt_addrss = angular.copy($scope.usr.prsnt_addrss);\r\n        }\r\n    }\r\n\r\n}]);\r\n\r\nusrContent.directive('fileInput', ['$parse', '$http', '$timeout',\r\n\tfunction($parse, $http, $timeout){\r\n\treturn {\r\n\t    restrict: 'A',\r\n\t    link: function(scope, elm, attrs){\r\n\t        elm.bind('change', function(){\r\n\t            \r\n\t            var files = elm[0].files;\r\n\t            $parse(attrs.fileInput).assign(scope, files);\r\n\t            scope.$apply();\r\n\t            \r\n\t            scope.shw_avatarmdl = true;\r\n\t            scope.loader = true;\r\n\r\n\t            $http({\r\n\t                method: 'POST',\r\n\t                url: \"/validate_dp\",\r\n\t                headers: { 'Content-Type': undefined },\r\n\t                transformRequest: function (data) {\r\n\t                    var fd = new FormData();\r\n\t                    angular.forEach(data.img_files, function(file){\r\n\t                       fd.append('file', file);\r\n\t                    });\r\n\t                    return fd;\r\n\t                },\r\n\t                data: {img_files: files}\r\n\t            }).then(function(result){\r\n\t            \tvar msg = result.data;\r\n                    scope.shw_avatarmdl = false;\r\n                    \r\n                    if(!msg['dp']['error']['file']){\r\n                    \tangular.element('#cropModal').appendTo('body').modal({\r\n                            backdrop: 'static'\r\n                        });\r\n                        var file = files[0];\r\n                        (function(file) {\r\n                            var reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = function(e) {\r\n                            \tvar imgTarget = e.target.result;\r\n                            \tscope.imgForm(imgTarget);\r\n                            }\r\n                        }(file));\r\n                        scope.msg = '';\r\n                    }else{\r\n                        scope.msg = msg;\r\n                    }\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n}]);\r\n\r\nusrContent.directive('fileResume', ['$parse', '$http', '$timeout',\r\n\tfunction($parse, $http, $timeout){\r\n\treturn {\r\n\t    restrict: 'A',\r\n\t    link: function(scope, elm, attrs){\r\n\t        elm.bind('change', function(){\r\n\t            var files = elm[0].files;\r\n\t            $parse(attrs.fileResume).assign(scope, files);\r\n\t            scope.$apply();\r\n\t            \r\n\t            scope.resume_loader = true;\r\n\r\n\t            $http({\r\n\t                method: 'POST',\r\n\t                url: \"/upload_resume\",\r\n\t                headers: { 'Content-Type': undefined },\r\n\t                transformRequest: function (data) {\r\n\t                    var fd = new FormData();\r\n\t                    angular.forEach(data.resumefiles, function(file){\r\n\t                       fd.append('file', file);\r\n\t                    });\r\n\t                    return fd;\r\n\t                },\r\n\t                data: {resumefiles: files}\r\n\t            }).then(function(result){\r\n\t            \tvar msg = result.data;\r\n                    console.log(msg);\r\n                    $timeout(function(){\r\n                    \tscope.resume_loader = false;\r\n                    \tscope.updateUsr();\r\n                    \tif(!msg['resume']){\r\n\t                    \tscope.msg = '';\r\n\t                    }else{\r\n\t                        scope.msg = msg;\r\n\t                    }\r\n\t                    angular.element('.preview_resume .upload').val('');\r\n\t                    \r\n                    }, 500);\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n}]);\r\n\r\n\r\nusrContent.directive('jpCustomCrop', ['$parse', '$rootScope', '$timeout', function($parse, $rootScope, $timeout){\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs)\r\n        {\r\n            $(function(){\r\n            \t$('#cropModal').on('shown.bs.modal', function () {\r\n            \t\t\r\n            \t\t$timeout(function(){\r\n            \t\t\tscope.loader = false;\r\n            \t\t\t$('.imgcropper, .prvw').hide().delay('200').fadeIn();\r\n            \t\t}, 1000)\r\n\t\t\t\t  var jcrop_api,\r\n                  boundx,\r\n                  boundy,\r\n\r\n                  // Grab some information about the preview pane\r\n                  $preview = $('.preview-pane'),\r\n                  $pcnt = $('.preview-pane .preview-container'),\r\n                  $pimg = $('.preview-pane .preview-container img'),\r\n                  xsize = $pcnt.width(),\r\n                  ysize = $pcnt.height();\r\n                  \r\n                  $('#target').Jcrop({\r\n                    boxWidth: 670,\r\n                    // boxHeight: 550,\r\n                    minSize: [ 100, 100 ],\r\n                    // maxSize: [ 450, 450 ],\r\n                    onChange: updatePreview,\r\n                    onSelect: updatePreview,\r\n                    aspectRatio: xsize / ysize\r\n                  },function(){\r\n                    // Use the API to get the real image size\r\n                    var bounds = this.getBounds();\r\n                    boundx = bounds[0];\r\n                    boundy = bounds[1];\r\n                    \r\n                    // Store the API in the jcrop_api variable\r\n                    jcrop_api = this;\r\n                    jcrop_api.animateTo([510, 300, 190, 100]);\r\n                  });\r\n\r\n\t                function updatePreview(c){\r\n\t                    var imgx = Math.round(c.x);\r\n\t                    var imgy = Math.round(c.y);\r\n\t                    var imgw = Math.round(c.w);\r\n\t                    var imgh = Math.round(c.h);\r\n\t                    var imgw2 = xsize;\r\n\t                    var imgh2 = ysize;\r\n\t                    scope.img_coordinates({imgx: imgx, imgy: imgy, imgw: imgw, imgh: imgh, imgw2: imgw2, imgh2: imgh2});\r\n\t                    if (parseInt(c.w) > 0){\r\n\t                      var rx = xsize / c.w;\r\n\t                      var ry = ysize / c.h;\r\n\t                      $pimg.css({\r\n\t                        width: Math.round(rx * boundx) + 'px',\r\n\t                        height: Math.round(ry * boundy) + 'px',\r\n\t                        marginLeft: '-' + Math.round(rx * c.x) + 'px',\r\n\t                        marginTop: '-' + Math.round(ry * c.y) + 'px'\r\n\t                      });\r\n\t                  \t}\r\n\t                };\r\n\t\t\t\t})\r\n            });\r\n        }\r\n    };\r\n}]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);